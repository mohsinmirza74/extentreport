<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="CYBERSPACE" failures="0" tests="5" name="Default test" time="0.196" errors="0" timestamp="2024-12-17T15:23:18 PKT">
  <testcase classname="extentreport.basicextentreport" name="@BeforeTest StartReporter" time="0.038">
    <failure type="java.nio.file.InvalidPathException" message="Illegal char &amp;lt;&amp;quot;&amp;gt; at index 0: &amp;quot;C:\Users\Mohsin QA\Desktop\Seleniumautomation framework\codestudio\test-output\Demo Extent report">
      <![CDATA[java.nio.file.InvalidPathException: Illegal char <"> at index 0: "C:\Users\Mohsin QA\Desktop\Seleniumautomation framework\codestudio\test-output\Demo Extent report
at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:204)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:175)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:231)
at java.base/java.io.File.toPath(File.java:2401)
at com.aventstack.extentreports.reporter.AbstractFileReporter.<init>(AbstractFileReporter.java:40)
at com.aventstack.extentreports.reporter.ExtentSparkReporter.<init>(ExtentSparkReporter.java:51)
at extentreport.basicextentreport.StartReporter(basicextentreport.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:655)
at org.testng.TestRunner.beforeRun(TestRunner.java:644)
at org.testng.TestRunner.run(TestRunner.java:610)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeTest StartReporter -->
  <testcase classname="extentreport.basicextentreport" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="extentreport.basicextentreport" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="extentreport.basicextentreport" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="extentreport.basicextentreport" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="extentreport.basicextentreport" name="@AfterMethod getTestResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getTestResult -->
  <testcase classname="extentreport.basicextentreport" name="launchbrowser" time="0.0">
    <skipped/>
  </testcase> <!-- launchbrowser -->
  <testcase classname="extentreport.basicextentreport" name="verifEmail" time="0.001">
    <skipped/>
  </testcase> <!-- verifEmail -->
  <testcase classname="extentreport.basicextentreport" name="veriflogo" time="0.0">
    <skipped/>
  </testcase> <!-- veriflogo -->
  <testcase classname="extentreport.basicextentreport" name="verifytitle" time="0.001">
    <skipped/>
  </testcase> <!-- verifytitle -->
  <testcase classname="extentreport.basicextentreport" name="verifyusername" time="0.0">
    <skipped/>
  </testcase> <!-- verifyusername -->
</testsuite> <!-- Default test -->
